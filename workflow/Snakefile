from snakemake.remote.FTP import RemoteProvider as FTPRemoteProvider
FTP = FTPRemoteProvider()

rule all:
    input: "../data/bed-intervals/reference.chunked.bed"

rule download_reference_genome:
    input:
        FTP.remote("ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/001/405/GCA_000001405.15_GRCh38/seqs_for_alignment_pipelines.ucsc_ids/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna.gz", keep_local=True)
    output:
        "../data/reference/hg38.fna"
    shell:
        "gunzip -c {input} > {output}"

rule expand_cpg_windows:
# Expand around CpG site by () number of nucleotides
    input:
        "../data/methylation-counts/253.bed",
         # https://github.com/igvteam/igv/blob/master/genomes/sizes/hg38.chrom.sizes
        "../data/reference/hg38.chrom.sizes"
    params: 
        expand_by=499
    output:
        "../data/bed-intervals/cpgs.plus.minus.500.bed"
    conda: 
        "envs/bedtools.yaml"
    shell:
        "tail -n+2 {input[0]} "
        "| grep 'chr1\t' "
        "| bedtools sort "
        "| bedtools slop -b {params.expand_by} -g {input[1]} "
        "> {output}"



rule merge_cpg_windows:
# Merge overlapping CpG bins, this way we don't have to
# encode so many things, and it should save storage and memory.
    input:
        "../data/bed-intervals/cpgs.plus.minus.500.bed"
    output:
        "../data/bed-intervals/cpg.intervals.condensed.bed"
    conda: 
        "envs/bedtools.yaml"
    shell:
        "cat {input} | bedtools merge > {output}"

# Write out four files
# 

rule chunk_genome:
    input:
        "../data/reference/hg38.fna",
        "../data/bed-intervals/cpg.intervals.condensed.bed"
    output:
        "../data/bed-intervals/reference.chunked.bed"
    conda: 
        "envs/bedtools.yaml"
    shell:
       "bedtools getfasta -fi {input[0]} -bed {input[1]} -bedOut > {output}"


encoded_file_outputs = ['A', 'C', 'G', 'T']

rule encode_sequence_with_variants:
    input:
        "../data/bed-intervals/reference.chunked.bed",
        "../data/variant-calls/253.snps.vcf"
    output:
        expand("../data/bed-intervals/encoded.253.{x}.bed", x = encoded_file_outputs)
    params:
       pfx = "../data/bed-intervals/encoded.253."
    shell:
        r"""
        ../scripts/encode_sequence_with_alleles.R 
            --reference () 
            --variants ()
            --output_prefix {params.pfx}
        """
        

# bedtools merge later to get 
# bedtools intersect 