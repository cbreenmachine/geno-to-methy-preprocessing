from snakemake.remote.FTP import RemoteProvider as FTPRemoteProvider
FTP = FTPRemoteProvider()

# Placeholder for now
CHROMS = ['chr17', 'chr18', 'chr19', 'chr20']

# Automatically figure out the sample wildcards
# SAMPLES = glob_wildcards("../../data/variant-calls/{sample}.snps.vcf") 

SAMPLES = ['253']

rule all:
    input: 
        expand("../data/training/{sample}.{chrom}.encoded.bed", sample=SAMPLES, chrom=CHROMS)
    

rule download_reference_genome:
    input:
        FTP.remote("ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/001/405/GCA_000001405.15_GRCh38/seqs_for_alignment_pipelines.ucsc_ids/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna.gz", keep_local=True)
    output:
        "../data/reference/hg38.fna"
    shell:
        "gunzip -c {input} > {output}"

rule split_by_chrom:
    input: 
        "../data/methylation-counts/{sample}.bed",
        "../data/reference/hg38.chrom.sizes"
    output: 
        "../data/bed-intervals/{sample}.{chrom}.bed"
    params: 
        expand_by=499
    conda: 
        "envs/bedtools.yaml"
    shell:
        "grep '{wildcards.chrom}' '{input[0]}' "
        "| bedtools slop -b {params.expand_by} -g {input[1]} "
        "| bedtools sort "       
        "> {output}"





rule chunk_genome:
    input:
        "../data/reference/hg38.fna",
        "../data/bed-intervals/{sample}.{chrom}.bed"
    output:
        "../data/bed-intervals/{sample}.{chrom}.sequence.bed"
    conda: 
        "envs/bedtools.yaml"
    shell:
       "bedtools getfasta -fi {input[0]} -bed {input[1]} -bedOut > {output}"


rule encode_sequence_with_variants:
    input:
        "../data/bed-intervals/{sample}.{chrom}.sequence.bed",
        "../data/variant-calls/{sample}.snps.vcf"
    output:
        "../data/training/{sample}.{chrom}.encoded.bed"
    shell:
        r"""
        ./scripts/encode_sequence_with_alleles.R --reference {input[0]} --variants {input[1]} --ofile {output}
        """
        
#END